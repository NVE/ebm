# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- 'sprint23'
pr:
  branches:
    include:
      - 'sprint23'
jobs:
- job: PytestUbuntu
  displayName: 'Run pytest on Ubuntu'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python312:
        python.version: '3.12'
      Python311:
        python.version: '3.11'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install setuptools build twine
        pip install .[dev]
      displayName: 'Install dev dependencies'
    - script: |
        python -m build
      displayName: 'Build package'
    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'

- job: PytestWindows
  displayName: 'Run pytest on Windows'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python312:
        python.version: '3.12'
      Python311:
        python.version: '3.11'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pywin32
        pip install setuptools build twine
      displayName: 'Install dependencies'
    - script: |
        python -m build
      displayName: 'Build package'
    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'