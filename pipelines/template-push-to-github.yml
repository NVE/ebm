parameters:
  - name: remote_repo
    type: string
    default: '$(GITHUB_REPO)'
    displayName: 'Git repository location github.com/owner/repo (no protocol or token)'
  - name: remote_branch
    type: string
    default: '$(Build.SourceBranchName)'
    displayName: 'Branch name for the remote branch (e.g. main, dev)'
  - name: git_user_email
    type: string
    default: 'ebm@nve.no'
    displayName: 'GitHub user.email default:ebm@nve.no'
  - name: git_user_name
    type: string
    default: 'Azure DevOps Build Bot'
    displayName: 'GitHub user.name  default:Azure DevOps Build Bot'
  - name: dryRun
    type: boolean
    default: false

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "🔍 Validating remote_repo: '${{ parameters.remote_repo }}'"
        # Regex pattern: must match github.com/owner/repo
        if [[ ! "${{ parameters.remote_repo }}" =~ ^github\.com\/[^\/]+\/[^\/]+$ ]]; then
          echo "❌ Invalid remote_repo format: '${{ parameters.remote_repo }}'"
          echo "Expected format: github.com/owner/repo (no protocol or token)"
          exit 1
        fi
        echo "✅ remote_repo format is valid"
    displayName: 'Validate remote_repo format 💂'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "${{ parameters.git_user_email }}"
        git config --global user.name "${{ parameters.git_user_name }}"
    displayName: 'Configure Git user 🪪'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        git remote remove github || true
        git remote add github https://$(GITHUB_TOKEN)@${{ parameters.remote_repo }}
    displayName: 'Add remote 🔭'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        git fetch github +refs/heads/${{ parameters.remote_branch }}:refs/remotes/github/${{ parameters.remote_branch }}
    displayName: 'Fetch remote 📥'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: git checkout -B "${{ parameters.remote_branch }}"
    displayName: "Switch to ${{ parameters.remote_branch }} 🌳"

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        HEAD_COMMIT=$(git log -1 --oneline)
        REMOTE_COMMIT=$(git log github/${{ parameters.remote_branch }} -1 --oneline)
        echo "🔍 HEAD latest commit: $HEAD_COMMIT"
        echo "🔍 Remote branch latest commit: $REMOTE_COMMIT"
    displayName: 'Show last commits 📖'

    # Check for divergence between Azure DevOps and GitHub repositories.
    # If GitHub has changes not found in Azure DevOps fail the pipeline.
    # Any conflicts must be handled manually.
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        if ! git merge-base --is-ancestor github/${{ parameters.remote_branch }} HEAD; then
          echo "⚠️ Divergence detected: remote has commits not found locally."
          echo "🕵️ Remote commits:"
          git log HEAD..github/${{ parameters.remote_branch }} --oneline
          echo "🏳️ Refusing to force push"
          exit 1
        fi
        echo "🏁 Safe to force push."
    displayName: 'Divergence check 🛂'
    continueOnError: false

  - task: Bash@3
    condition: eq(${{parameters.dryRun}}, false)
    inputs:
      targetType: 'inline'
      script: git push --force github HEAD:"${{ parameters.remote_branch }}"
    displayName: 'Force push 🤜'

    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)
      GITHUB_REPO: $(GITHUB_REPO)
      REMOTE_BRANCH: ${{parameters.remote_branch}}
